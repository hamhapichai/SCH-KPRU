name: Development Workflow

on:
  push:
    branches: [ develop, 'feature/**', 'hotfix/**' ]
  pull_request:
    branches: [ develop, main ]

permissions:
  contents: read

jobs:
  # ==========================================
  # Code Quality Checks
  # ==========================================
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    # Backend Code Quality
    - name: Restore .NET dependencies
      run: dotnet restore backend/SchKpruApi/SchKpruApi.csproj
    
    - name: Check .NET formatting
      run: dotnet format backend/SchKpruApi/SchKpruApi.csproj --verify-no-changes --verbosity diagnostic
    
    - name: Run .NET analyzers
      run: dotnet build backend/SchKpruApi/SchKpruApi.csproj --configuration Release --verbosity normal
    
    # Frontend Code Quality
    - name: Install frontend dependencies
      run: |
        cd frontend
        bun install
    
    - name: Run ESLint
      run: |
        cd frontend
        bun run lint
    
    - name: Check TypeScript
      run: |
        cd frontend
        bun run type-check || npx tsc --noEmit
    
    - name: Check Prettier formatting
      run: |
        cd frontend
        npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"
  
  # ==========================================
  # Unit Tests
  # ==========================================
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    # Backend Tests
    - name: Restore .NET dependencies
      run: dotnet restore backend/SchKpruApi/SchKpruApi.csproj
    
    - name: Build backend
      run: dotnet build backend/SchKpruApi/SchKpruApi.csproj --no-restore --configuration Release
    
    - name: Run backend tests
      run: |
        cd backend/SchKpruApi
        dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      env:
        ConnectionStrings__DefaultConnection: Host=localhost;Port=5432;Database=test_db;Username=test_user;Password=test_password
    
    # Frontend Tests
    - name: Install frontend dependencies
      run: |
        cd frontend
        bun install
    
    - name: Run frontend tests
      run: |
        cd frontend
        bun test || npm test -- --passWithNoTests
    
    # Upload Coverage
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend/SchKpruApi/coverage
        flags: backend